# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Organization {
  _id: ID!
  name: String!
}

type Dataset {
  _id: ID!
  name: String!
  description: String!
}

type Project {
  _id: ID!
  name: String!
  description: String!
  created: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TagSchema {
  dataSchema: JSON!
  uiSchema: JSON!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Study {
  _id: ID!
  name: String!
  description: String!
  instructions: String!
  tagSchema: TagSchema!
  project: ID!
  tagsPerEntry: Float!
}

type Entry {
  _id: String!
  organization: ID!
  entryID: String!
  mediaURL: String!
  mediaType: String!
  dataset: ID!
  creator: ID!
  dateCreated: DateTime!
  meta: JSON!
}

type Query {
  getOrganizations: [Organization!]!
  exists(name: String!): Boolean!
  getDatasets: [Dataset!]!
  projectExists(name: String!): Boolean!
  getProjects: [Project!]!
  studyExists(name: String!, project: ID!): Boolean!
  findStudies: [Study!]!
  entryForDataset(dataset: ID!): [Entry!]!
}

type Mutation {
  createOrganization(organization: OrganizationCreate!): Organization!
  createDataset(dataset: DatasetCreate!): Dataset!
  changeDatasetName(dataset: ID!, newName: String!): Boolean!
  changeDatasetDescription(dataset: ID!, newDescription: String!): Boolean!
  createProject(project: ProjectCreate!): Project!
  deleteProject: Boolean!
  createStudy(study: StudyCreate!): Study!
  deleteStudy: Boolean!
  changeStudyName(study: ID!, newName: String!): Study!
  changeStudyDescription(study: ID!, newDescription: String!): Study!
  createEntry(entry: EntryCreate!, dataset: ID!): Entry!
}

input OrganizationCreate {
  name: String!
}

input DatasetCreate {
  name: String!
  description: String!
}

input ProjectCreate {
  name: String!
  description: String!
}

input StudyCreate {
  name: String!
  description: String!
  instructions: String!
  tagsPerEntry: Float!
  project: ID!
  tagSchema: TagSchemaInput!
}

input TagSchemaInput {
  dataSchema: JSON!
  uiSchema: JSON!
}

input EntryCreate {
  entryID: String!
  mediaURL: String!
  mediaType: String!
  creator: ID!
  meta: JSON!
}